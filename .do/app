name: osint-ai
region: nyc

services:
  # Backend API Service
  - name: backend
    dockerfile_path: Dockerfile.backend
    source_dir: /
    github:
      repo: YOUR_GITHUB_USERNAME/osint-ai
      branch: main
      deploy_on_push: true
    http_port: 8000
    instance_count: 1
    instance_size_slug: basic-xs
    
    routes:
      - path: /api
    
    health_check:
      http_path: /api/v1/health
      initial_delay_seconds: 30
      period_seconds: 10
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 3
    
    envs:
      - key: DATABASE_URL
        scope: RUN_TIME
        value: ${db.DATABASE_URL}
      
      - key: REDIS_URL
        scope: RUN_TIME
        value: ${redis.REDIS_URL}
      
      - key: GRADIENT_AI_ENDPOINT
        scope: RUN_TIME
        type: SECRET
        value: ${GRADIENT_AI_ENDPOINT}
      
      - key: GRADIENT_AI_API_KEY
        scope: RUN_TIME
        type: SECRET
        value: ${GRADIENT_AI_API_KEY}
      
      - key: GITHUB_TOKEN
        scope: RUN_TIME
        type: SECRET
        value: ${GITHUB_TOKEN}
      
      - key: NEWS_API_KEY
        scope: RUN_TIME
        type: SECRET
        value: ${NEWS_API_KEY}
      
      - key: SECRET_KEY
        scope: RUN_TIME
        type: SECRET
        value: ${SECRET_KEY}
      
      - key: DEBUG
        scope: RUN_TIME
        value: "False"
      
      - key: LOG_LEVEL
        scope: RUN_TIME
        value: "INFO"
      
      - key: CORS_ORIGINS
        scope: RUN_TIME
        value: "https://osint-ai-${APP_DOMAIN}"

  # Frontend Service
  - name: frontend
    dockerfile_path: Dockerfile.frontend
    source_dir: /
    github:
      repo: YOUR_GITHUB_USERNAME/osint-ai
      branch: main
      deploy_on_push: true
    http_port: 3000
    instance_count: 1
    instance_size_slug: basic-xs
    
    routes:
      - path: /
    
    envs:
      - key: VITE_API_BASE_URL
        scope: BUILD_TIME
        value: "https://${APP_URL}/api"

# Database
databases:
  - name: db
    engine: PG
    version: "15"
    production: false
    cluster_name: osint-ai-db
    db_name: osint_ai
    db_user: osint_user

# Redis (using managed database)
# Note: DigitalOcean doesn't have managed Redis in App Platform yet
# You'll need to create a separate managed Redis cluster